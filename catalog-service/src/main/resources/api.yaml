openapi: 3.0.0
info:
  title: OpenAPI definition
  version: v0
servers:
  - url: http://localhost:8083
    description: Generated server url
paths:
  /api/categories:
    post:
      tags:
        - category-rest-controller
      operationId: create-category
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CategoryRequestDto"
      responses:
        "204":
          description: CREATED
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CategoryResponseDto"
  /api/products/:
    post:
      tags:
        - product-rest-controller
      operationId: create-product
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProductRequestDto"
      responses:
        "204":
          description: CREATED
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductResponseDto"
  /api/products/{id}:
    put:
      tags:
        - product-rest-controller
      operationId: update-product
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProductRequestDto"
      responses:
        "204":
          description: CREATED
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductResponseDto"
    delete:
      tags:
        - product-rest-controller
      operationId: delete-product
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "201":
          description: NO CONTENT
  /api/products/{id}/priceHistory:
    get:
      tags:
        - product-rest-controller
      operationId: get-price-history
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ProductPriceHistoryDto"
  /api/products/filter:
    get:
      x-spring-paginated: true
      tags:
        - product-rest-controller
      operationId: filterProducts
      parameters:
        - name: filterDto
          in: query
          required: false
          schema:
            $ref: "#/components/schemas/ProductFilterDto"
      responses:
        "200":
          description: CREATED
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ProductResponseDto"
components:
  schemas:
    CategoryRequestDto:
      type: object
      properties:
        name:
          type: string
    CategoryResponseDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
    ProductRequestDto:
      type: object
      properties:
        name:
          type: string
        price:
          type: number
          format: double
        category:
          type: string
    ProductResponseDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        price:
          type: number
          format: double
        category:
          type: string
    ProductFilterDto:
      type: object
      properties:
        price:
          type: array
          items:
            type: number
            format: double
        name:
          type: string
        category:
          type: string
    ProductPriceHistoryDto:
      type: object
      properties:
        effectiveFrom:
          type: string
          format: date-time
        price:
          type: number
          format: double
    Pageable:
      type: object
      properties:
        page:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        sort:
          type: string
